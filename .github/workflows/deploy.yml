name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  SERVICE_NAME: llm-backend
  REGION: us-central1

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        install_components: 'beta'
        version: '529.0.0'

    - name: Authenticate to GCP
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}
        project_id: ${{ secrets.PROJECT_ID }}

    - name: Configure Docker
      run: gcloud auth configure-docker --quiet

    # Backend deployment
    - name: Build Docker image (Backend)
      run: |
        cd backend
        gcloud builds submit --quiet \
          --tag=gcr.io/$PROJECT_ID/$SERVICE_NAME \
          .

    - name: Deploy Backend to Cloud Run
      run: |
        gcloud beta run deploy $SERVICE_NAME --quiet \
          --image=gcr.io/$PROJECT_ID/$SERVICE_NAME \
          --platform=managed \
          --region=$REGION \
          --allow-unauthenticated \
          --cpu=2 \
          --memory=2Gi \
          --min-instances=1 \
          --max-instances=3 \
          --timeout=900s \
          --concurrency=80 \
          --set-env-vars="GUNICORN_CMD_ARGS=--bind=0.0.0.0:8080 --workers=2 --timeout=300 --preload" \
          --set-env-vars="CLOUD_RUN_HEALTH_CHECK_PATH=/health" \
          --port=8080 \
          --ingress=all \
          --deploy-health-check

    - name: Verify Backend deployment
      run: |
        BACKEND_URL=$(gcloud run services describe $SERVICE_NAME --platform=managed --region=$REGION --format='value(status.url)')
        echo "Backend deployed successfully to: $BACKEND_URL"
        echo "Waiting 60 seconds for backend initialization..."
        sleep 60
        curl -I $BACKEND_URL/health || echo "Initial health check failed - checking logs..."
        gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name=$SERVICE_NAME" --limit=50

    # Frontend deployment
    - name: Build Docker image (Frontend)
      run: |
        cd frontend
        gcloud builds submit --quiet \
          --tag=gcr.io/$PROJECT_ID/llm-frontend \
          .

    - name: Deploy Streamlit Frontend to Cloud Run
      run: |
        gcloud beta run deploy llm-frontend --quiet \
          --image=gcr.io/$PROJECT_ID/llm-frontend \
          --platform=managed \
          --region=$REGION \
          --allow-unauthenticated \
          --port=8501 \
          --set-env-vars=BACKEND_URL=https://$SERVICE_NAME.a.run.app \
          --cpu=1 \
          --memory=2Gi \
          --min-instances=1 \
          --timeout=600s \
          --ingress=all

    - name: Verify Frontend deployment
      run: |
        FRONTEND_URL=$(gcloud run services describe llm-frontend --platform=managed --region=$REGION --format='value(status.url)')
        echo "Frontend deployed successfully to: $FRONTEND_URL"
        echo "Waiting 30 seconds for frontend initialization..."
        sleep 30
        curl -I $FRONTEND_URL || echo "Initial frontend check failed - checking logs..."
        gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name=llm-frontend" --limit=50